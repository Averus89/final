plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkiverse.langchain4j:quarkus-langchain4j-openai:1.0.0'
    implementation 'io.quarkiverse.neo4j:quarkus-neo4j:5.4.0'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-opentelemetry'
    implementation("io.quarkus:quarkus-logging-json")
    implementation 'dev.langchain4j:langchain4j-pgvector:1.1.0-beta7'
    implementation 'dev.langchain4j:langchain4j-cohere:1.0.1-beta6'
    implementation 'dev.langchain4j:langchain4j-qdrant:1.0.1-beta6'
    implementation 'dev.langchain4j:langchain4j-azure-open-ai:1.1.0-rc1'
    implementation 'dev.langchain4j:langchain4j-community-neo4j-retriever:1.1.0-beta7'
    implementation 'com.azure:azure-ai-openai:1.0.0-beta.16'
    implementation 'com.azure:azure-identity:1.13.3'
    implementation 'com.pgvector:pgvector:0.1.6'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'io.quarkus:quarkus-container-image-docker'

    // Structurizr
    implementation 'com.structurizr:structurizr-core:2.0.0'
    implementation 'com.structurizr:structurizr-client:2.0.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    runtimeOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'pl.dexbytes'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
